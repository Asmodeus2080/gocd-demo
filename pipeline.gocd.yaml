# # pipelines:
# #   basic-pipeline:
# #     group: test-group
# #     materials:
# #       - git:
# #           url: "https://github.com/Asmodeus2080/go-cd-material-rep.git"
# #           branch: main
# #     stages:
# #       - name: test-stage
# #         jobs:
# #           - name: test-job
# #             tasks:
# #               - exec:
# #                   command: echo
# #                   arguments: ["This is a pipeline without a template."]
format_version: 10
environments:
  dev:
    agents:
      - 31cf3675-8bd9-4ae7-9e00-4eabf73f4cb4
    pipelines:
      - demo-test-build-pipeline
      - demo-test-dev-pipeline
  qa:
    agents:
      - 31cf3675-8bd9-4ae7-9e00-4eabf73f4cb4
    pipelines:
      - demo-test-qa-pipeline
  stag:
    agents:
      - 31cf3675-8bd9-4ae7-9e00-4eabf73f4cb4
    pipelines:
      - demo-test-stag-pipeline
  prod:
    agents:
      - 31cf3675-8bd9-4ae7-9e00-4eabf73f4cb4
    pipelines:
      - demo-test-prod-pipeline
pipelines:
  demo-test-build-pipeline:
    group: test-group
    label_template: "build-${COUNT}"
    lock_behavior: unlockWhenFinished
    materials:
      git-repo:
        type: git
        url: https://github.com/Asmodeus2080/go-cd-material-rep.git
        branch: main
        shallow_clone: true
    stages:
      - build:
          clean_workspace: true
          jobs:
            build:
              tasks:
                - exec:
                    command: echo
                    arguments: 
                      - "starting build process"

  demo-test-dev-pipeline:
    group: test-group
    label_template: "dev-${COUNT}"
    lock_behavior: unlockWhenFinished
    # display_order: -1
    materials:
      build-dependency:
        pipeline: demo-test-dev-pipeline
        stage: build
        auto_update: false
    stages:
      - test:
          approval:
            type: manual
            allow_only_on_success: true
          jobs:
            unit-tests:
              tasks:
                - exec:
                    command: echo
                    arguments:
                      - "Running test suite"
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - |
                        echo "Performing checks"
                        # Add any specific test commands here
                        exit 0

  demo-test-qa-pipeline:
    group: test-group
    label_template: "qa-${COUNT}"
    lock_behavior: unlockWhenFinished
    materials:
      dev_dependency:
        pipeline: demo-test-dev-pipeline
        stage: test
        auto_update: false
    stages:
      - test:
          jobs:
            qa_test:
              tasks:
                - exec:
                    command: echo
                    arguments: 
                      - "testing in qa env"

  
  demo-test-stag-pipeline:
    group: test-group
    label_template: "stag-${COUNT}"
    lock_behavior: unlockWhenFinished
    materials:
      qa_dependency:
        pipeline: demo-test-qa-pipeline
        stage: test
        auto_update: false
    stages:
      - run:
          jobs:
            run_stage:
              tasks:
                - exec:
                    command: echo
                    arguments:
                      - "running on stage"

  
  demo-test-prod-pipeline:
    group: test-group
    label_template: "prod-${COUNT}"
    lock_behavior: unlockWhenFinished
    materials:
      stag_dependency:
        pipeline: demo-test-stag-pipeline
        stage: run
        auto_update: false
    stages:
      - prod_run:
          jobs:
            run_prod:
              tasks:
                - exec:
                    command: echo
                    arguments:
                      - "running in prod"
